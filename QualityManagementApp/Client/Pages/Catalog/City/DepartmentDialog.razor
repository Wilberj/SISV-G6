@inject IDepartmentService DepartmentService
<BusyOverlay @bind-visible="@DepartmentService.IsBusy" />

<MudDialog>
    <DialogContent>
        <MudGrid Justify="Justify.Center" Spacing="6">
            <MudItem>
                <MudPaper Width="100%" Outlined="true" Class="rounded-lg px-6 py-6">
                    <EditForm Context="department" Model="@DepartmentService.Department" OnValidSubmit="@DepartmentService.AddDepartment">
                        <DataAnnotationsValidator />
                        <MudStack Spacing="6" Class="mb-6">
                            <MudText Align="Align.Center" Class="my-5" Color="Color.Secondary" Typo="Typo.h6">@(ReadOnly == false ? "Nuevo Departamento" : "Detalles del Departamento")</MudText>

                                <MudTextField ReadOnly="@ReadOnly" Variant="Variant.Outlined" Label="Nombre del Departamento" HelperText="Ingrese el departamento" @bind-Value="@DepartmentService.Department.Name" For="@(() => DepartmentService.Department.Name)" />
                            </MudStack>

                        @if (ReadOnly == true)
                        {
                            <MudButton StartIcon="@Icons.Material.Filled.ClearAll" Color="Color.Primary" OnClick="@NewDepartment">Nuevo departamento</MudButton>
                        }
                        else
                        {
                            <MudButton StartIcon="@Icons.Material.Filled.Add" Color="Color.Secondary" ButtonType="ButtonType.Submit">Agregar departamento</MudButton>
                        }
                    </EditForm>
                </MudPaper>
            </MudItem>
            <MudItem>
                @if (DepartmentService.Departments == null)
                {
                    <MudStack Class="my-8" Spacing="1">
                        <MudSkeleton Class="my-8" SkeletonType="SkeletonType.Rectangle" Animation="Animation.Wave" Width="180px" Height="25px" />

                        <MudSkeleton Class="mb-2" SkeletonType="SkeletonType.Rectangle" Animation="Animation.Wave" Width="100%" Height="45px" />
                        <MudSkeleton Class="mb-2" SkeletonType="SkeletonType.Rectangle" Animation="Animation.Wave" Width="100%" Height="45px" />
                        <MudSkeleton Class="mb-2" SkeletonType="SkeletonType.Rectangle" Animation="Animation.Wave" Width="100%" Height="45px" />
                    </MudStack>
                }
                else if (DepartmentService.Departments.Length == 0)
                {
                    <MudText Class="mt-13" Color="Color.Dark" Align="Align.Center" Typo="Typo.h6">Parece que no tienes ningun departamento añadido.</MudText>
                }
                else
                {
                    <MudTable Style="max-height: 300px; overflow-y: scroll" Elevation="0" RowClass="cursor-pointer" SortLabel="Ordenar por" Items="@DepartmentService.Departments" Virtualize="true" T="Model.Department" Hover="true" SelectedItemChanged="@(async (item) => await GetDepartment(item.PkDepartment))">
                        <ToolBarContent>
                            <MudText Typo="Typo.h6">Lista de departamentos</MudText>
                            <MudSpacer />
                        </ToolBarContent>
                        <HeaderContent>
                            <MudTh><MudTableSortLabel SortBy="new Func<Model.Department, object>(z => z.Name)">Ordenar</MudTableSortLabel></MudTh>
                        </HeaderContent>
                        <RowTemplate>
                            <MudTd DataLabel="Nombre">@context.Name</MudTd>
                        </RowTemplate>
                        <PagerContent>
                            <MudTablePager HidePageNumber="true" HorizontalAlignment="HorizontalAlignment.Left" />
                        </PagerContent>
                    </MudTable>
                }
            </MudItem>
        </MudGrid>
    </DialogContent>
    <DialogActions>
        <MudButton Color="Color.Primary" OnClick="@(() => MudDialog.Close())">Cerrar</MudButton>
    </DialogActions>
</MudDialog>

@code {
    [CascadingParameter] MudDialogInstance MudDialog { get; set; } = null!;

    bool ReadOnly { get; set; }

    protected override async Task OnInitializedAsync()
    {
        ReadOnly = false;
        DepartmentService.Department = new();
        await DepartmentService.GetDepartments();
    }

    async Task GetDepartment(int? pkDepartment)
    {
        ReadOnly = true;
        await DepartmentService.GetDepartment(pkDepartment);
    }

    void NewDepartment()
    {
        ReadOnly = false;
        DepartmentService.Department = new();
    }
}
