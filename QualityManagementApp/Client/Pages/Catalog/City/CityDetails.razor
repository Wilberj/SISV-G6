@page "/city_details"
@page "/city_details/{CityId:int}"
@inject ICityService CityService
@inject IDepartmentService DepartmentService

<PageTitle>@(CityId == null ? "Nueva Ciudad" : "Detalles de la ciudad")</PageTitle>

    <BusyOverlay @bind-visible="@CityService.IsBusy" />

    <EditForm Context="city" Model="@CityService.City" OnValidSubmit="@CityService.AddCity">
        <DataAnnotationsValidator />
        <MudStack Spacing="12" Class="mx-3 mb-6">
            <MudStack Spacing="6">
                <MudText Align="Align.Center" Class="my-5" Color="Color.Secondary" Typo="Typo.h4">@(CityId == null ? "Nueva Ciudad" : "Detalles de la ciudad")</MudText>

            @if (ReadOnly == true)
            {
                <MudPaper Elevation="1" Class="mb-6">
                    <MudToolBar>
                        <MudText Typo="Typo.h6" Color="Color.Primary" Class="mr-6">Opciones</MudText>
                        <MudTooltip Text="Eliminar">
                            <MudIconButton Icon="@Icons.Material.Rounded.Delete" Color="Color.Primary" OnClick="@(async () => await CityService.DeleteCity())" />
                        </MudTooltip>
                        <MudTooltip Text="Modificar">
                            <MudIconButton Icon="@Icons.Material.Rounded.EditNote" Color="Color.Primary" OnClick="@(() => ReadOnly = false)" />
                        </MudTooltip>
                    </MudToolBar>
                </MudPaper>
            }

            <MudTextField ReadOnly="@ReadOnly" Variant="Variant.Outlined" Label="Nombre de la ciudad" HelperText="Ingrese una ciudad" @bind-Value="@CityService.City.Name" Required="true" For="@(() => CityService.City.Name)" />

            <MudSelect ReadOnly="@ReadOnly" For="@(() => CityService.City.FkDepartment)" Variant="Variant.Outlined" Required="true" AdornmentIcon="@Icons.Material.Rounded.MyLocation" AdornmentColor="Color.Secondary" T="int?" Label="Departamento" HelperText="Seleccione un departamento" @bind-Value="@CityService.City.FkDepartment">
                @foreach (var department in DepartmentService.Departments!)
                {
                    <MudSelectItem T="int?" Value="@department.PkDepartment">@department.Name</MudSelectItem>
                }
            </MudSelect>
        </MudStack>
    </MudStack>

    @if (ReadOnly == false && CityId != null)
    {
        <MudFab Class="z-30" Style="position: sticky; right: 3.5%; bottom: 10%; float: right" Disabled="@(CityService.City.Name == null? true : false)" StartIcon="@Icons.Material.Rounded.EditNote" Size="Size.Large" Color="Color.Secondary" Label="Modificar Ciudad" OnClick="@(async () => ReadOnly = await CityService.UpdateCity())" />
    }
    else if (ReadOnly == false)
    {
        <MudFab Class="z-30" Style="position: sticky; right: 3.5%; bottom: 10%; float: right" Disabled="@(CityService.City.Name == null? true : false)" StartIcon="@Icons.Material.Rounded.Add" Size="Size.Large" Color="Color.Secondary" Label="Agregar Ciudad" ButtonType="ButtonType.Submit" />
    }
</EditForm>
@code {
    [Parameter]
    public int? CityId { get; set; }

    bool ReadOnly { get; set; }

    protected override async Task OnParametersSetAsync()
    {
        CityService.IsBusy = true;
        if (CityId == null)
        {
            ReadOnly = false;
            CityService.City = new();
        }
        else
        {
            ReadOnly = true;
            await CityService.GetCity(CityId);
        }
        CityService.IsBusy = false;
    }

    protected override async Task OnInitializedAsync()
    {
        DepartmentService.Departments = new();
        await DepartmentService.GetDepartments();
    }
}
